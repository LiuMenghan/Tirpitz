'use strict';

var Fs = require('fs');
var Path = require('path');
exports = module.exports = function(args){
	return exports;
}

exports.processorName = "super";
exports.process = function(node, tplPath, parser){

	var children = node.children;
	var replacer = {};
	for(var i = 0; i < children.length ; i++){
		var child = children[i];
		if("override" == child.processorName){
			replacer[child.attribute.id] = child;
		}
	}
	//console.log(replacer);
	var superPath = Path.resolve(Path.dirname(tplPath), node.attribute.parent);
	
	var superContext = Fs.readFileSync(superPath, parser.encoding);
	
	var superNode = parser.parse2node(superContext);
	
	for(var i = 0; i < superNode.children.length; i++){
		var child = superNode.children[i];
		if(child.processorName == "replacable"){
			if(undefined != replacer[child.attribute.id]){
				child.processorName = "";
				child.children = replacer[child.attribute.id].children;			
			}else{
				child.processorName = "";				
			}
		}
	}
	//console.log(superNode.children);
	node.parentNode.children[node.parentIdx].children = superNode.children;
	node.parentNode.children[node.parentIdx].processorName = "";
}

